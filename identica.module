<?php
/**
 * @file
 * Provides Oauth Integration for Identi.ca
 */

define('CONSUMER_KEY', variable_get('identica_consumer_key', ''));
define('CONSUMER_SECRET', variable_get('identica_consumer_secret', ''));

/**
 * Implements hook_menu()
 */
function identica_menu() {
  $items['identica/oauth'] = array(
    'access callback' => TRUE,
    'page callback' => 'identica_oauth_callback',
    'file' => 'identica.pages.inc',
  );
  $items['admin/config/services/identica'] = array(
    'title' => 'Identica',
    'access arguments' => array('administer site configuration'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('identica_settings'),
    'file' => 'identica.pages.inc',
  );
  $items['user/%user/edit/identica'] = array(
    'title' => 'Identi.ca Account',
    'page callback' => 'identica_user_settings',
    'page arguments' => array(1),
    'access arguments' => array('add identica account'),
    'file' => 'identica.pages.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implements hook_permission().
 */
function identica_permission() {
  return array(
    'add identica account' => array(
      'title' => t('Add Identica accounts'),
      'description' => t('Controls who can add Identi.ca Accounts and Post from this website'),
    ),
  );
}

/**
 * Helper function for returning Identica account object
 * based on uid
 */
function load_identica_user($uid) {
  $query = db_select('identica_oauth', 'o');
  $query->join('identica_users', 'u', 'o.uid = u.uid');
  $query->condition('u.uid', $uid, '=');
  $query->fields('o')
    ->fields('u');

  $values = $query->execute()->fetchAssoc();
  if ($values)
    return new IdenticaUser($values);
  return NULL;
}

function identica_post_as_admin($text = '') {
  module_load_include('php', 'identica', 'twitteroauth/twitteroauth');
  $user = variable_get('identica_fedora', '');
  if (!$user)
    return;
  try {
    $uid = user_load_by_name($user)->uid;
    $account = load_identica_user($uid);
    $access_token = $account->get_auth();
    $connection = new TwitterOAuth(CONSUMER_KEY, CONSUMER_SECRET, $access_token['oauth_token'], $access_token['oauth_token_secret']);
    $connection->post('statuses/update', array('status' => $text));
    if (200 != $connection->http_code)
      return FALSE;
  }
  catch (Exception $e) {
    drupal_set_message(t("Invalid User Name or User does not have an associated Identi.ca account"), "error");
    return FALSE;
  }
  return TRUE;
}
